security:

    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
#        main:
#            pattern: ^/
#            form_login:
#                provider: fos_userbundle
#                csrf_token_generator: security.csrf.token_manager
#            logout:       true
#            anonymous:    true
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_docs:
            pattern: ^/doc
            anonymous: true

        api_password_reset:
            pattern: ^/password/reset
            anonymous: true

        api_login:
            pattern:  ^/login$
            stateless: true
            anonymous: true
            form_login:
                check_path:               /login
                require_previous_session: false
                username_parameter:       username
                password_parameter:       password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api_register:
            pattern: ^/register
            anonymous: true

        api_documents:
            pattern: ^/documents
            anonymous: true

        api_texts:
            pattern: ^/texts
            anonymous: true

        api_forms:
            pattern: ^/forms
            anonymous: true

        api_questions:
            pattern: ^/questions
            anonymous: true

        api_options:
            pattern: ^/options
            anonymous: true

        api_answers:
            pattern: ^/answers
            anonymous: true

        api_categories:
            pattern: ^/categories
            anonymous: true

        api_payment:
            pattern: ^/payments
            anonymous: true

        api_files:
            pattern: ^/files
            anonymous: true


#        login:
#            pattern:  ^/api/login
#            stateless: true
#            anonymous: true
#            form_login:
#                check_path:               /api/login_check
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false

        api:
            pattern:   ^/
            stateless: true
            lexik_jwt: ~
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        #- { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/password/reset, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/documents$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/texts$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/forms$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/answers$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/categories$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/payments$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/, role: ROLE_ADMIN }
#        - { path: ^/doc, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }